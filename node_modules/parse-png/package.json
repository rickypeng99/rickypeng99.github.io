{
  "_args": [
    [
      {
        "raw": "parse-png@^1.0.0",
        "scope": null,
        "escapedName": "parse-png",
        "name": "parse-png",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/rickypeng99/Documents/websites/jekyll-TeXt-theme/node_modules/to-ico"
    ]
  ],
  "_from": "parse-png@>=1.0.0 <2.0.0",
  "_id": "parse-png@1.1.2",
  "_inCache": true,
  "_location": "/parse-png",
  "_nodeVersion": "4.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/parse-png-1.1.2.tgz_1495193530640_0.7943963864818215"
  },
  "_npmUser": {
    "name": "kevva",
    "email": "kevinmartensson@gmail.com"
  },
  "_npmVersion": "4.6.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "parse-png@^1.0.0",
    "scope": null,
    "escapedName": "parse-png",
    "name": "parse-png",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/resize-img",
    "/to-ico"
  ],
  "_resolved": "https://registry.npmjs.org/parse-png/-/parse-png-1.1.2.tgz",
  "_shasum": "f5c2ad7c7993490986020a284c19aee459711ff2",
  "_shrinkwrap": null,
  "_spec": "parse-png@^1.0.0",
  "_where": "/Users/rickypeng99/Documents/websites/jekyll-TeXt-theme/node_modules/to-ico",
  "author": {
    "name": "Kevin Martensson",
    "email": "kevinmartensson@gmail.com",
    "url": "github.com/kevva"
  },
  "bugs": {
    "url": "https://github.com/kevva/parse-png/issues"
  },
  "dependencies": {
    "pngjs": "^3.2.0"
  },
  "description": "Parse a PNG",
  "devDependencies": {
    "ava": "*",
    "file-type": "^4.3.0",
    "get-stream": "^3.0.0",
    "pify": "^2.3.0",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "f5c2ad7c7993490986020a284c19aee459711ff2",
    "tarball": "https://registry.npmjs.org/parse-png/-/parse-png-1.1.2.tgz"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "9ae868b40c65b6da37005c165ee9de2cc0ff26fe",
  "homepage": "https://github.com/kevva/parse-png#readme",
  "keywords": [
    "parse",
    "png",
    "promise"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "kevva",
      "email": "kevinmartensson@gmail.com"
    }
  ],
  "name": "parse-png",
  "optionalDependencies": {},
  "readme": "# parse-png [![Build Status](https://travis-ci.org/kevva/parse-png.svg?branch=master)](https://travis-ci.org/kevva/parse-png)\n\n> Parse a PNG\n\n\n## Install\n\n```\n$ npm install --save parse-png\n```\n\n\n## Usage\n\n```js\nconst fs = require('fs');\nconst parsePng = require('parse-png');\n\nparsePng(fs.readFileSync('unicorn.png')).then(png => {\n\tconsole.log(png);\n\t/*\n\t{\n\t\twidth: 200,\n\t\theight: 133,\n\t\tdepth: 8,\n\t\tinterlace: false,\n\t\tpalette: false,\n\t\tcolor: true,\n\t\talpha: false,\n\t\tbpp: 3,\n\t\tcolorType: 2,\n\t\tdata: <Buffer 29 48 4d ...>,\n\t}\n\t*/\n\n\tpng.adjustGamma();\n\tpng.pack().pipe(fs.createWriteStream('unicorn-adjusted.png'));\n});\n```\n\n\n## API\n\n### parsePng(buffer, [options])\n\nReturns a promise for a PNG instance. See the [pngjs documentation](https://github.com/lukeapage/pngjs#async-api) for more information.\n\n#### buffer\n\nType: `buffer`\n\nA PNG image buffer.\n\n#### options\n\nType: `object`\n\nSee the [pngjs options](https://github.com/lukeapage/pngjs#options).\n\n\n## License\n\nMIT Â© [Kevin Martensson](http://github.com/kevva)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kevva/parse-png.git"
  },
  "scripts": {
    "test": "xo && ava"
  },
  "version": "1.1.2",
  "xo": {
    "esnext": true
  }
}
